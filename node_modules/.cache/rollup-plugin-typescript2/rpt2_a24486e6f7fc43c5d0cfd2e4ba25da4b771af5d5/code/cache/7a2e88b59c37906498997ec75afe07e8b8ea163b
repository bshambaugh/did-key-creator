{"code":"import * as u8a from 'uint8arrays';\r\nimport multicodec from 'multicodec';\r\nimport multibase from 'multibase';\r\nexport function encodeDIDfromHexString(publicKeyHex) {\r\n    const publicKey = u8a.fromString(publicKeyHex, 'base16');\r\n    const didKey = encodeDID(publicKey);\r\n    return didKey;\r\n}\r\nexport function encodeDID(publicKey) {\r\n    const publicKeywPrefix = multicodec.addPrefix('p256-pub', publicKey);\r\n    const buf = multibase.encode('base58btc', publicKeywPrefix);\r\n    const bufAsString = u8a.toString(buf);\r\n    return `did:key:${bufAsString}`;\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/home/ubuntu/Documents/exploringCIDs/elliptic-piece/key-did-provider-secp256r1/node_modules/uint8arrays/dist/index.d.ts","/home/ubuntu/Documents/exploringCIDs/elliptic-piece/key-did-provider-secp256r1/node_modules/multicodec/dist/src/index.d.ts","/home/ubuntu/Documents/exploringCIDs/elliptic-piece/key-did-provider-secp256r1/node_modules/multibase/dist/src/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,GAAG,MAAM,aAAa,CAAA;AAClC,OAAO,UAAU,MAAM,YAAY,CAAA;AACnC,OAAQ,SAAS,MAAK,WAAW,CAAA;AAEjC,MAAM,UAAU,sBAAsB,CAAC,YAAoB;IACvD,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,YAAY,EAAC,QAAQ,CAAC,CAAC;IACxD,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,CAAA;IACnC,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,SAAqB;IACrC,MAAM,gBAAgB,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,EAAC,SAAS,CAAC,CAAA;IACnE,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,EAAC,gBAAgB,CAAC,CAAA;IAC1D,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IACrC,OAAO,WAAW,WAAW,EAAE,CAAA;AACzC,CAAC\"}"}
